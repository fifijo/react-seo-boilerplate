// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component should mount correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App>
        <Header>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "gDyVOg",
                    "rules": Array [
                      "
  display: flex;
  align-items: center;
  justify-content: center;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bwzfXH gDyVOg"
              >
                <Navigation>
                  <Styled(NavLink)
                    exact={true}
                    to="/"
                  >
                    <StyledComponent
                      exact={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "hUpHLV",
                            "rules": Array [
                              "
  padding: 0 1rem;
  text-decoration: none;
  color: #19233b;
  font-size: 1.2rem;
  font-weight: 700;
  text-transform: uppercase;
  &.active {
    text-decoration: underline;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "activeClassName": [Function],
                            "activeStyle": [Function],
                            "aria-current": [Function],
                            "className": [Function],
                            "exact": [Function],
                            "innerRef": [Function],
                            "isActive": [Function],
                            "location": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "strict": [Function],
                            "style": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "NavLink",
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          },
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      to="/"
                    >
                      <NavLink
                        className="sc-bdVaJa hUpHLV"
                        exact={true}
                        to="/"
                      >
                        <Link
                          aria-current="page"
                          className="sc-bdVaJa hUpHLV active"
                          style={Object {}}
                          to={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": null,
                            }
                          }
                        >
                          <LinkAnchor
                            aria-current="page"
                            className="sc-bdVaJa hUpHLV active"
                            href="/"
                            navigate={[Function]}
                            style={Object {}}
                          >
                            <a
                              aria-current="page"
                              className="sc-bdVaJa hUpHLV active"
                              href="/"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              Home
                            </a>
                          </LinkAnchor>
                        </Link>
                      </NavLink>
                    </StyledComponent>
                  </Styled(NavLink)>
                  <Styled(NavLink)
                    to="/about"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "hUpHLV",
                            "rules": Array [
                              "
  padding: 0 1rem;
  text-decoration: none;
  color: #19233b;
  font-size: 1.2rem;
  font-weight: 700;
  text-transform: uppercase;
  &.active {
    text-decoration: underline;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "activeClassName": [Function],
                            "activeStyle": [Function],
                            "aria-current": [Function],
                            "className": [Function],
                            "exact": [Function],
                            "innerRef": [Function],
                            "isActive": [Function],
                            "location": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "strict": [Function],
                            "style": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "NavLink",
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          },
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      to="/about"
                    >
                      <NavLink
                        className="sc-bdVaJa hUpHLV"
                        to="/about"
                      >
                        <Link
                          aria-current={null}
                          className="sc-bdVaJa hUpHLV"
                          to={
                            Object {
                              "hash": "",
                              "pathname": "/about",
                              "search": "",
                              "state": null,
                            }
                          }
                        >
                          <LinkAnchor
                            aria-current={null}
                            className="sc-bdVaJa hUpHLV"
                            href="/about"
                            navigate={[Function]}
                          >
                            <a
                              aria-current={null}
                              className="sc-bdVaJa hUpHLV"
                              href="/about"
                              onClick={[Function]}
                            >
                              About
                            </a>
                          </LinkAnchor>
                        </Link>
                      </NavLink>
                    </StyledComponent>
                  </Styled(NavLink)>
                  <Styled(NavLink)
                    to="/contact"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "hUpHLV",
                            "rules": Array [
                              "
  padding: 0 1rem;
  text-decoration: none;
  color: #19233b;
  font-size: 1.2rem;
  font-weight: 700;
  text-transform: uppercase;
  &.active {
    text-decoration: underline;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "activeClassName": [Function],
                            "activeStyle": [Function],
                            "aria-current": [Function],
                            "className": [Function],
                            "exact": [Function],
                            "innerRef": [Function],
                            "isActive": [Function],
                            "location": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "strict": [Function],
                            "style": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "NavLink",
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          },
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      to="/contact"
                    >
                      <NavLink
                        className="sc-bdVaJa hUpHLV"
                        to="/contact"
                      >
                        <Link
                          aria-current={null}
                          className="sc-bdVaJa hUpHLV"
                          to={
                            Object {
                              "hash": "",
                              "pathname": "/contact",
                              "search": "",
                              "state": null,
                            }
                          }
                        >
                          <LinkAnchor
                            aria-current={null}
                            className="sc-bdVaJa hUpHLV"
                            href="/contact"
                            navigate={[Function]}
                          >
                            <a
                              aria-current={null}
                              className="sc-bdVaJa hUpHLV"
                              href="/contact"
                              onClick={[Function]}
                            >
                              Contact
                            </a>
                          </LinkAnchor>
                        </Link>
                      </NavLink>
                    </StyledComponent>
                  </Styled(NavLink)>
                </Navigation>
              </div>
            </StyledComponent>
          </styled.div>
        </Header>
        <Switch>
          <AppRoute
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Home)",
                "serverFetch": [Function],
                "type": [Function],
              }
            }
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            key="/"
            layout={[Function]}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
          >
            <Route
              computedMatch={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              exact={true}
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              path="/"
              render={[Function]}
            >
              <defaultLayout>
                <Connect(Home)
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                >
                  <Home
                    data={Array []}
                    fetchData={[Function]}
                    hasError={false}
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    isLoading={true}
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                  >
                    <HelmetWrapper
                      defer={true}
                      encodeSpecialCharacters={true}
                    >
                      <SideEffect(NullComponent)
                        defer={true}
                        encodeSpecialCharacters={true}
                        title="Home Page"
                        titleAttributes={Object {}}
                      >
                        <NullComponent
                          defer={true}
                          encodeSpecialCharacters={true}
                          title="Home Page"
                          titleAttributes={Object {}}
                        />
                      </SideEffect(NullComponent)>
                    </HelmetWrapper>
                    <h2>
                      This is the home page filled with fake data
                    </h2>
                    <ul />
                  </Home>
                </Connect(Home)>
              </defaultLayout>
            </Route>
          </AppRoute>
        </Switch>
      </App>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`App component should render correctly 1`] = `
Array [
  <div
    class="sc-bwzfXH gDyVOg"
  >
    <a
      aria-current="page"
      class="sc-bdVaJa hUpHLV active"
      href="/"
    >
      Home
    </a>
    <a
      class="sc-bdVaJa hUpHLV"
      href="/about"
    >
      About
    </a>
    <a
      class="sc-bdVaJa hUpHLV"
      href="/contact"
    >
      Contact
    </a>
  </div>,
  <h2>
    This is the home page filled with fake data
  </h2>,
  <ul />,
]
`;
